on:
  push:
    tags:
      - '*'

name: Create Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with:
          versionSpec: '5.2.x'
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.nuGetVersionV2 }}
    - name: Test
      run: dotnet test --configuration Release --no-restore --verbosity normal
    - name: Publish
      run: dotnet publish src/PrintIt.ServiceHost --configuration Release --no-restore --output ./release /p:Version=${{ steps.gitversion.outputs.nuGetVersionV2 }}
    - name: Create Archive
      uses: Amadevus/pwsh-script@v2.0.0
      with:
        script: Compress-Archive -Path ./release/* -DestinationPath ./release/release.zip
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload GitHub Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/release.zip
        asset_name: printit-release.zip
        asset_content_type: application/zip
